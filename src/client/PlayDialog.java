/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Hoang Cao
 */
public class PlayDialog extends javax.swing.JDialog {

    /**
     * Creates new form PlayDialog
     */
    JFrame parent;
    String playerName;
    String board[] = new String[9];
    String mark;
    String markOppo;
    Socket socket;
    ObjectInputStream ois;
    ObjectOutputStream oos;
    int port;
    ArrayList<JLabel> listLabel = new ArrayList<>();

    public PlayDialog(JFrame parent, boolean modal, String playerName, int port) {
        super(parent, modal);
        this.parent = parent;
        this.playerName = playerName;
        this.port = port;

        initComponents();
        for (int i = 0; i < board.length; i++) {
            board[i] = ".";
        }

        listLabel.add(lb0);
        listLabel.add(lb1);
        listLabel.add(lb2);
        listLabel.add(lb3);
        listLabel.add(lb4);
        listLabel.add(lb5);
        listLabel.add(lb6);
        listLabel.add(lb7);
        listLabel.add(lb8);
        System.out.println("Check list Label: " + listLabel.size());
        this.setVisible(true);
    }

    public void initConnection(int port) {
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    socket = new Socket("localhost", port);
                    System.out.println("PlayDialog: Accept connection");
                    oos = new ObjectOutputStream(socket.getOutputStream());
                    oos.flush();
                    ois = new ObjectInputStream(socket.getInputStream());
                    System.out.println("PlayDialog: check ois null or not 1 -> " + ois);

                } catch (IOException ex) {
                    Logger.getLogger(PlayDialog.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }).start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbName = new javax.swing.JLabel();
        lbTurn = new javax.swing.JLabel();
        lb5 = new javax.swing.JLabel();
        lb0 = new javax.swing.JLabel();
        lb1 = new javax.swing.JLabel();
        lb2 = new javax.swing.JLabel();
        lb3 = new javax.swing.JLabel();
        lb6 = new javax.swing.JLabel();
        lb4 = new javax.swing.JLabel();
        lb8 = new javax.swing.JLabel();
        lb7 = new javax.swing.JLabel();
        btnStart = new javax.swing.JButton();
        lbResult = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tic Tac Toe Game");

        lbName.setText("Your name: X-Player");

        lbTurn.setText("Turn: X");

        lb5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lb5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb5.setText(".");
        lb5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lb5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb5MouseClicked(evt);
            }
        });

        lb0.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lb0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb0.setText(".");
        lb0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lb0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb0MouseClicked(evt);
            }
        });

        lb1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lb1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb1.setText(".");
        lb1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lb1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb1MouseClicked(evt);
            }
        });

        lb2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lb2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb2.setText(".");
        lb2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lb2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb2MouseClicked(evt);
            }
        });

        lb3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lb3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb3.setText(".");
        lb3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lb3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb3MouseClicked(evt);
            }
        });

        lb6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lb6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb6.setText(".");
        lb6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lb6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb6MouseClicked(evt);
            }
        });

        lb4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lb4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb4.setText(".");
        lb4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lb4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb4MouseClicked(evt);
            }
        });

        lb8.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lb8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb8.setText(".");
        lb8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lb8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb8MouseClicked(evt);
            }
        });

        lb7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lb7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb7.setText(".");
        lb7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lb7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb7MouseClicked(evt);
            }
        });

        btnStart.setText("START");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        lbResult.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbResult.setForeground(new java.awt.Color(255, 51, 0));
        lbResult.setText("jLabel1");
        lbResult.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lb6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb0, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lb1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lb2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lb4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lb5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lb7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lb8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(90, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnStart)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbResult)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbTurn)
                        .addGap(75, 75, 75))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbName)
                    .addComponent(lbTurn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbResult)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb0, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnStart)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        initConnection(port);
        System.out.println("Button START clicked.");
        btnStart.setEnabled(false);
        playGame();
        this.dispose();
    }//GEN-LAST:event_btnStartActionPerformed

    int checkTurn = 0;

    public void playGame() {
        new Thread(new Runnable() {
            @Override
            public void run() {

                while (true) {
                    try {
                        System.out.println("PlayDialog: check ois null or not 2 -> " + ois);
                        Object obj = ois.readObject();

                        System.out.println("Check obj: " + obj);

                        if (obj instanceof String) {
                            // Set the mark
                            mark = (String) obj;
                            System.out.println("PlayDialog: check mark " + mark);

                            if (mark.equals("O")) {
                                lbName.setText(playerName + ": O-Player");
                                lbTurn.setText("Turn: X");
                                markOppo = "X";
                                continue;
                            } else if (mark.equals("X")) {
                                lbName.setText(playerName + ": X-Player");
                                lbTurn.setText("Turn: X");
                                markOppo = "O";
                                checkTurn = 1;
                            }

                        } else if (obj instanceof Integer) {
                            int temp = (Integer) obj;
                            lbResult.setVisible(true);

                            if (temp == 1000) {
                                lbResult.setText("Code 1000: Player refused to play again.");
                                System.out.println("Code 1000: Player refused to play again.\"");
                                break;
                            }

                            switch (temp) {
                                case 100:
                                    lbResult.setText("YOU WON!");
                                    break;
                                case 80:
                                    lbResult.setText("YOU LOSE!");
                                    break;
                                case 50:
                                    lbResult.setText("TIE!");
                                    break;
                            }

                            int returnValue = JOptionPane.showConfirmDialog(null, "Do you want to play again?", "Play Again?", JOptionPane.YES_NO_OPTION);
                            if (returnValue == JOptionPane.YES_OPTION) {
                                // Reset all cell to "."
                                lbResult.setVisible(false);
                                for (int i = 0; i < board.length; i++) {
                                    listLabel.get(i).setText(".");
                                    board[i] = ".";
                                }
                                checkTurn = 0;
                                oos.writeUnshared(new Integer(500));
                                System.out.println("Player: Accept to continue play.");

                            } else if (returnValue == JOptionPane.NO_OPTION) {
                                oos.writeUnshared(new Integer(400));
                                System.out.println("Player: Refuse to continue play.");
                                break;
                            }

                        } else if (obj instanceof String[]) {
                            System.out.println("PlayDialog: receive board from the server.");
                            board = (String[]) obj;

                            for (int i = 0; i < board.length; i++) {
                                listLabel.get(i).setText(board[i]);
                            }
                            lbTurn.setText("Turn: " + mark);
                            checkTurn = 1;
                        }

                    } catch (IOException | ClassNotFoundException ex) {
                        Logger.getLogger(PlayDialog.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                System.out.println("PlayDialog: End game.");
                try {
                    oos.close();
                    ois.close();
                    socket.close();
                } catch (IOException ex) {
                    Logger.getLogger(PlayDialog.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        }).start();
    }

    public void tickTheCell(int cellNum) {
//        new Thread(new Runnable() {
//            @Override
//            public void run() {
// && !board[cellNum].equals(markOppo)
        if (board[cellNum].equals(".") && checkTurn == 1) {
            listLabel.get(cellNum).setText(mark);
            System.out.println("Ticked at cell " + cellNum + "board[" + cellNum + "] value: " + board[cellNum]);
            System.out.println("Check tick: " + listLabel.get(cellNum).getText());
            board[cellNum] = mark;
            try {
                oos.writeUnshared(board);
                System.out.println("Write board back to Server.");
            } catch (IOException ex) {
                Logger.getLogger(PlayDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
            checkTurn = 0;
            lbTurn.setText("Turn: " + markOppo);
        }
//            }
//
//        }).start();

    }

    private void lb0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb0MouseClicked
        System.out.println("Ticked.");
        tickTheCell(0);
    }//GEN-LAST:event_lb0MouseClicked

    private void lb1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb1MouseClicked
        tickTheCell(1);
    }//GEN-LAST:event_lb1MouseClicked

    private void lb2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb2MouseClicked
        tickTheCell(2);
    }//GEN-LAST:event_lb2MouseClicked

    private void lb3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb3MouseClicked
        tickTheCell(3);
    }//GEN-LAST:event_lb3MouseClicked

    private void lb4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb4MouseClicked
        tickTheCell(4);
    }//GEN-LAST:event_lb4MouseClicked

    private void lb5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb5MouseClicked
        tickTheCell(5);
    }//GEN-LAST:event_lb5MouseClicked

    private void lb6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb6MouseClicked
        tickTheCell(6);
    }//GEN-LAST:event_lb6MouseClicked

    private void lb7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb7MouseClicked
        tickTheCell(7);
    }//GEN-LAST:event_lb7MouseClicked

    private void lb8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb8MouseClicked
        tickTheCell(8);
    }//GEN-LAST:event_lb8MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStart;
    private javax.swing.JLabel lb0;
    private javax.swing.JLabel lb1;
    private javax.swing.JLabel lb2;
    private javax.swing.JLabel lb3;
    private javax.swing.JLabel lb4;
    private javax.swing.JLabel lb5;
    private javax.swing.JLabel lb6;
    private javax.swing.JLabel lb7;
    private javax.swing.JLabel lb8;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbResult;
    private javax.swing.JLabel lbTurn;
    // End of variables declaration//GEN-END:variables
}
